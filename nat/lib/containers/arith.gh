
//Taken from https://groups.google.com/forum/#!topic/verifast/eCf5QzLtGlo
lemma void mul_nonnegative(int x, int y)
    requires 0 <= x &*& 0 <= y;
    ensures 0 <= x * y;
{
    for (int i = 0; i < x; i++)
        invariant 0 <= i &*& i <= x &*& 0 <= i * y;
        decreases x - i;
    {
    }
}

lemma void mul_mono(int i, int n, int a)
    requires 0 <= i &*& i <= n &*& 0 <= a;
    ensures i * a <= n * a;
{
    mul_nonnegative(i, a);
    for (int j = i; j < n; j++)
        invariant i <= j &*& j <= n &*& i * a <= j * a;
        decreases n - j;
    {
    }
}

lemma void mul_bounds(int x, int xb, int y, int yb)
    requires 0 <= x &*& x <= xb &*& 0 <= y &*& y <= yb;
    ensures 0 <= x * y &*& x * y <= xb * yb;
{
    mul_nonnegative(x, y);
    mul_mono(x, xb, y);
    assert x * y <= xb * y;
    mul_mono(y, yb, xb);
    assert y * xb <= yb * xb;
}